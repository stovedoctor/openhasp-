#plate35 lanbonl8 May 23 2023
openhasp:
  plate35:
    objects:

      - obj: "p1b3" # counter white
        properties:
           "val": '{{ 1 if is_state("light.counter", "on") else 0 }}'
           "text_color": '{{ "yellow" if is_state("light.counter", "on") else "white" }}'
           "bg_grad_color": >
            {% if is_state('light.counter','on') %}
            {% set rgb = state_attr('light.counter','rgb_color') %}
            {{ "#%02x%02x%02x" | format(rgb[0],rgb[1],rgb[2]) }}            
            {% endif %}
        event:
            "down":
             - service: light.turn_on
               data:
                 entity_id: light.counter
                 brightness: 255
                 effect: solid
                 rgbw_color:
                  - 255
                  - 255
                  - 255
                  - 255
  
#switch to page 6 for color picker                
            "long":
            - service: openhasp.change_page
              data:
                entity_id: openhasp.plate35
                page: 6
                
      - obj: "p1b4" # Counter off
        properties:
           "val": '{{ 1 if is_state("light.counter", "off") else 0 }}'
           "text": '{{ "\uF40B # ON" if is_state("light.counter", "on") else "\uF40B # OFF" | e }}'  
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "light.counter"



      - obj: "p2b6" # dine
        properties:
           "val": '{{ 1 if is_state("light.dining_room_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "light.dining_room_light"
      - obj: "p1b5" # kitchen
        properties:
           "val": '{{ 1 if is_state("light.kitchen_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "light.kitchen_light"              

      - obj: "p1b6" # dine
        properties:
           "val": '{{ 1 if is_state("light.dining_room_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "light.dining_room_light"

      - obj: "p1b7" # living room Light brightness
        properties:
          "val": "{{ state_attr('light.living_room_light', 'brightness') if state_attr('light.living_room_light', 'brightness') != None else 0 }}"
        event:
          "changed":
            - service: light.turn_on
              data:
                entity_id: light.living_room_light
                brightness:  "{{ val }}"
          "up":
            - service: light.turn_on
              data:
                entity_id: light.living_room_light
                brightness:  "{{ val }}"
                
               #front of house
      - obj: "p1b9" # all
        properties:
          "val": '{{ 1 if is_state("light.front_of_house", "on") else 0 }}'
          "text": '{{ "\uF40B # Front of house ON" if is_state("light.front_of_house", "on") else "\uF40B # Front of house OFF" | e }}'
          "text_color": '{{ "yellow" if is_state("light.front_of_house", "on") else "white" }}'
        event:
          "long":
            - service: homeassistant.toggle
              entity_id: "light.front_of_house"

               
               #front of house
      - obj: "p2b9" # all
        properties:
          "val": '{{ 1 if is_state("light.front_of_house", "on") else 0 }}'
          "text": '{{ "\uF40B # Front of house ON" if is_state("light.front_of_house", "on") else "\uF40B # Front of house OFF" | e }}'
          "text_color": '{{ "yellow" if is_state("light.front_of_house", "on") else "white" }}'
        event:
          "long":
            - service: homeassistant.toggle
              entity_id: "light.front_of_house"     
             
# page 2 lights 
                               
      - obj: "p2b5" # Light brightness
        properties:
          "val": "{{ state_attr('light.living_room_light', 'brightness') if state_attr('light.living_room_light', 'brightness') != None else 0 }}"
        event:
          "changed":
            - service: light.turn_on
              data:
                entity_id: light.living_room_light
                brightness:  "{{ val }}"
          "up":
            - service: light.turn_on
              data:
                entity_id: light.living_room_light
                brightness:  "{{ val }}"
                
      - obj: "p2b1" # kitchen
        properties:
           "val": '{{ 1 if is_state("light.kitchen_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "light.kitchen_light"              

      - obj: "p2b2" # dine
        properties:
           "val": '{{ 1 if is_state("light.dining_room_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "light.dining_room_light"
               
      - obj: "p2b3" # office
        properties:
           "val": '{{ 1 if is_state("light.office_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "light.office_light"
               
               
      - obj: "p2b4" # hall
        properties:
           "val": '{{ 1 if is_state("switch.hall_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "switch.hall_light"               
     
      - obj: "p2b7" # patio
        properties:
           "val": '{{ 1 if is_state("switch.patio_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "switch.patio_light"
               
      - obj: "p2b8" # door
        properties:
           "val": '{{ 1 if is_state("light.porch_light", "on") else 0 }}'
          
        event:
            "down":
             - service: homeassistant.toggle
               entity_id: "light.porch_light"
               
               #front of house
      - obj: "p2b9" # all
        properties:
          "val": '{{ 1 if is_state("light.front_of_house", "on") else 0 }}'
          "text": '{{ "\uF40B # Front of house ON" if is_state("light.front_of_house", "on") else "\uF40B # Front of house OFF" | e }}'
          "text_color": '{{ "yellow" if is_state("light.front_of_house", "on") else "white" }}'
        event:
          "long":
            - service: homeassistant.toggle
              entity_id: "light.front_of_house" 

# Page 4 media players 
      
      - obj: "p4b1" # Pause
        event:
          "down":
            - service: media_player.media_play_pause
              data: {}
              target:
                entity_id: media_player.spotify_smarthome1
      - obj: "p4b2" # Play/Pause icon
        properties:
          "text": '{{ "\uE3E4" if is_state("media_player.spotify_smarthome1", "playing") else "\uE40A" }}'
      - obj: "p4b3" # Play/Pause text
        properties:
          "text": '{{ "Pause" if is_state("media_player.spotify_smarthome1", "playing") else "Play" }}'

    #   - obj: "p4b4" #  Repeat
    #     event:
    #       "down":
    #         - service: media_player.repeat_set
    #           data:
    #             repeat: "{{ 'off' if is_state_attr('media_player.spotify_smarthome1', 'repeat', 'all') else 'all' }}"
    #           target:
    #             entity_id: media_player.spotify_smarthome1
    #   - obj: "p4b5" # Repeat icon
    #     properties:
    #       "text": '{{ "\uE456" if is_state_attr("media_player.spotify_smarthome1", "repeat", "all") else "\uE457" }}'

    #   - obj: "p4b7" #  Shuffle
    #     event:
    #       "down":
    #         - service: media_player.shuffle_set
    #           data:
    #             shuffle: "{{ not is_state_attr('media_player.spotify_smarthome1', 'shuffle', true) }}"
    #           target:
    #             entity_id: media_player.spotify_smarthome1
    #   - obj: "p4b8" # Shuffle icon
    #     properties:
    #       "text": '{{ "\uE49D" if is_state_attr("media_player.spotify_smarthome1", "shuffle", true) else "\uE49E" }}'

      - obj: "p4b10" # Previous
        event:
          "down":
            - service: media_player.media_previous_track
              data: {}
              target:
                entity_id: media_player.spotify_smarthome1

      - obj: "p4b13" # Next
        event:
          "down":
            - service: media_player.media_next_track
              data: {}
              target:
                entity_id: media_player.spotify_smarthome1
     
      - obj: "p4b19" # volume slider living room
        properties:
          "val": >
            {% if (state_attr('media_player.kitchen_nest','volume_level') != none and states('media_player.kitchen_nest') not in ['unavailable', 'unknown']) %}
            {{ state_attr('media_player.kitchen_nest','volume_level') * 100 | int(default=100) }}
            {%-endif %}
          "click": "{{ 'false' if states('media_player.kitchen_nest') in ['unavailable', 'unknown'] else 'true' }}"          
          
        event:
          "changed":
            - service: media_player.volume_set
              data:
                entity_id: media_player.kitchen_nest
                volume_level: "{{ val | int / 100 }}"
          "up":
            - service: media_player.volume_set
              data:
                entity_id: media_player.kitchen_nest
                volume_level: "{{ val | int / 100 }}"

      - obj: "p4b22" # volume slider living room
        properties:
          "val": >
            {% if (state_attr('media_player.nestmini7847','volume_level') != none and states('media_player.nestmini7847') not in ['unavailable', 'unknown']) %}
            {{ state_attr('media_player.nestmini7847','volume_level') * 100 | int(default=100) }}
            {%-endif %}
          "click": "{{ 'false' if states('media_player.nestmini7847') in ['unavailable', 'unknown'] else 'true' }}"          
          
        event:
          "changed":
            - service: media_player.volume_set
              data:
                entity_id: media_player.nestmini7847
                volume_level: "{{ val | int / 100 }}"
          "up":
            - service: media_player.volume_set
              data:
                entity_id: media_player.nestmini7847
                volume_level: "{{ val | int / 100 }}"
                
      - obj: "p4b16" # TV time living 
        event:
          "down":
            - service: script.spotify_start_playback
                          
                
# page3 rain and wind 

 # weather 
      - obj: "p3b14" # Icon
        properties:
          "src": "{{ 'L:/w-128-' + states('weather.accuweather') + '.png' if not is_state('weather.accuweather','unavailable') }}"

      - obj: "p3b15" # Current date (adjust format to your needs)
        properties:
          "text": >
            {%- if not is_state('weather.accuweather','unavailable') %}
            {%- set day = (states.weather.accuweather.last_changed).strftime('%w') %}
            {%- set days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] %}
            {{- days[ day | int -1 ] }} {{ (states.weather.accuweather.last_changed).strftime('%m. %d. ') }}
            {% endif -%}

      - obj: "p3b16" # Current temp (you can use your own outdoor temp sensor if you have one)
        properties:
          "text": "{{ states('sensor.station_temperature') if not is_state('sensor.station_temperature','unavailable') else '--' }}°F"
          # or "{{ states('sensor.your_own_temp_sensor') if not is_state('sensor.your_own_temp_sensor','unavailable') else '--' }}°F"  "{{ state_attr('weather.accuweather','temperature') |string + '°F' if not is_state('weather.accuweather','unavailable') }}"  

      - obj: "p3b17" # Current weather condition
        properties:
          "text": >
             {% if is_state('weather.accuweather','clear-night') -%}
             Clear night
             {% elif is_state('weather.accuweather','cloudy') -%}
             Cloudy
             {% elif is_state('weather.accuweather','fog') -%}
             Fog
             {% elif is_state('weather.accuweather','hail') -%}
             Hail
             {% elif is_state('weather.accuweather','lightning') -%}
             Lightning
             {% elif is_state('weather.accuweather','lightning-rainy') -%}
             Thunderstorms
             {% elif is_state('weather.accuweather','partlycloudy') -%}
             Partly cloudy
             {% elif is_state('weather.accuweather','pouring') -%}
             Pouring rain
             {% elif is_state('weather.accuweather','rainy') -%}
             Rainy
             {% elif is_state('weather.accuweather','snowy') -%}
             Snowy
             {% elif is_state('weather.accuweather','snowy-rainy') -%}
             Snowy-rainy
             {% elif is_state('weather.accuweather','sunny') -%}
             Sunny
             {% elif is_state('weather.accuweather','windy') -%}
             Windy
             {% elif is_state('weather.accuweather','windy-variant') -%}
             Windy
             {% elif is_state('weather.accuweather','exceptional') -%}
             Exceptional
             {% elif is_state('weather.accuweather','unavailable') -%}
             (not available)
             {% else -%}
             {{ states('weather.accuweather') }}
             {% endif -%}

      - obj: "p3b10"  # tab dots - MAKE SURE YOU UPDATE THIS ONE!!
        event:
          "changed":
            - service: openhasp.command
              target:
                entity_id: openhasp.plate35
              data:
                keyword: p3b19.text
                parameters: >
                  {% if val == 0 %}
                  {{ "#000000 \u2022# #909090 \u2022#" | e }}
                  {%-elif val == 1 %}
                  {{ "#909090 \u2022# #000000 \u2022#" | e }}
                  {% endif %}

      - obj: "p3b21" # Forecast time +2h
        properties:
          "text": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            {%- set update = states('sensor.date') %}
            {%- set midnight = now().replace(hour=0, minute=0, second=0, microsecond=0).timestamp() %}
            {%- set event = as_timestamp(strptime(state_attr('weather.barb_s_place_hourly','forecast')[2]['datetime'], '%Y-%m-%dT%H:%M:%S%z', default='2020-01-00T00:00:00+00:00')) %}
            {%- set delta = ((event - midnight) // 86400) | int %}
            {%- if delta == 0 %}
            Today
            {%- elif delta == 1 %}
            Tomorrow
            {%- endif %}
            {{- event | timestamp_custom(" %-I %p") }}
            {%- endif %}

      - obj: "p3b22" # Forecast temp +2h
        properties:
          "text": "{{ state_attr('weather.barb_s_place_hourly','forecast')[2]['temperature'] if not is_state('weather.barb_s_place_hourly','unavailable') else '-' }}"

      - obj: "p3b23" # Forecast condition +2h
        properties:
          "src": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            L:/w-32-{{ state_attr('weather.barb_s_place_hourly','forecast')[2]['condition'] }}.png
            {%- endif %}

      - obj: "p3b31" # Forecast time +8h (using Dawn/Morn etc instead of Today/Tomorrow)
        properties:
          "text": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            {%- set update = states('sensor.date') %}
            {%- set midnight = now().replace(hour=0, minute=0, second=0, microsecond=0).timestamp() %}
            {%- set event = as_timestamp(strptime(state_attr('weather.barb_s_place_hourly','forecast')[8]['datetime'], '%Y-%m-%dT%H:%M:%S%z', default='2020-01-00T00:00:00+00:00')) %}
            {%- set delta = ((event - midnight) // 86400) | int %}
            {%- if delta == 0 %}
            Today
            {%- elif delta == 1 %}
            Tomorrow
            {%- endif %}
            {{- event | timestamp_custom(" %-I %p") }}
            {%- endif %}        

      - obj: "p3b32" # Forecast temp +8h
        properties:
          "text": "{{ state_attr('weather.barb_s_place_hourly','forecast')[8]['temperature'] if not is_state('weather.barb_s_place_hourly','unavailable') else '-' }}"

      - obj: "p3b33" # Forecast condition +8h
        properties:
          "src": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            L:/w-32-{{ state_attr('weather.barb_s_place_hourly','forecast')[8]['condition'] }}.png
            {%- endif %}

      - obj: "p3b41" # Forecast time +4h
        properties:
          "text": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            {%- set update = states('sensor.date') %}
            {%- set midnight = now().replace(hour=0, minute=0, second=0, microsecond=0).timestamp() %}
            {%- set event = as_timestamp(strptime(state_attr('weather.barb_s_place_hourly','forecast')[6]['datetime'], '%Y-%m-%dT%H:%M:%S%z', default='2020-01-00T00:00:00+00:00')) %}
            {%- set delta = ((event - midnight) // 86400) | int %}
            {%- if delta == 0 %}
            Today
            {%- elif delta == 1 %}
            Tomorrow
            {%- endif %}
            {{- event | timestamp_custom(" %-I %p") }}
            {%- endif %}

      - obj: "p3b42" # Forecast temp +4h
        properties:
          "text": "{{ state_attr('weather.barb_s_place_hourly','forecast')[6]['temperature'] if not is_state('weather.barb_s_place_hourly','unavailable') else '-' }}"

      - obj: "p3b43" # Forecast condition +4h
        properties:
          "src": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            L:/w-32-{{ state_attr('weather.barb_s_place_hourly','forecast')[6]['condition'] }}.png
            {%- endif %}

      - obj: "p3b51" # Forecast time +8h
        properties:
          "text": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            {%- set update = states('sensor.date') %}
            {%- set midnight = now().replace(hour=0, minute=0, second=0, microsecond=0).timestamp() %}
            {%- set event = as_timestamp(strptime(state_attr('weather.barb_s_place_hourly','forecast')[12]['datetime'], '%Y-%m-%dT%H:%M:%S%z', default='2020-01-00T00:00:00+00:00')) %}
            {%- set delta = ((event - midnight) // 86400) | int %}
            {%- if delta == 0 %}
            Today
            {%- elif delta == 1 %}
            Tomorrow
            {%- endif %}
            {{- event | timestamp_custom(" %-I %p") }}
            {%- endif %}

      - obj: "p3b52" # Forecast temp +8h
        properties:
          "text": "{{ state_attr('weather.barb_s_place_hourly','forecast')[12]['temperature'] if not is_state('weather.barb_s_place_hourly','unavailable') else '-' }}"

      - obj: "p3b53" # Forecast condition +8h
        properties:
          "src": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            L:/w-32-{{ state_attr('weather.barb_s_place_hourly','forecast')[12]['condition'] }}.png
            {%- endif %}

      - obj: "p3b61" # Forecast date +1d
        properties:
          "text": >
            {%- if not is_state('weather.barb_s_place_hourly','unavailable') %}
            {%- set now = as_timestamp(strptime(state_attr('weather.accuweather','forecast')[1]['datetime'], '%Y-%m-%dT%H:%M:%S%z', default='2020-01-00T00:00:00+00:00')) %}
            {%- set day = now | timestamp_custom("%w") %}
            {%- set days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] %}
            {{ days[ day | int -1 ] }}{{- now | timestamp_custom(" %d") }}
            {%- endif %}

      - obj: "p3b62" # Forecast temp min +1d
        properties:
          "text": "{{ state_attr('weather.accuweather','forecast')[1]['templow'] if not is_state('weather.accuweather','unavailable') else '-' }}"

      - obj: "p3b63" # Forecast temp max +1d
        properties:
          "text": "{{ state_attr('weather.accuweather','forecast')[1]['temperature'] if not is_state('weather.accuweather','unavailable') else '-' }}"

      - obj: "p3b64" # Forecast condition +1d
        properties:
          "src": >
            {%- if not is_state('weather.accuweather','unavailable') %}
            L:/w-32-{{ state_attr('weather.accuweather','forecast')[1]['condition'] }}.png
            {%- endif %}

      - obj: "p3b71" # Forecast date +2d
        properties:
          "text": >
            {%- if not is_state('weather.accuweathere','unavailable') %}
            {%- set now = as_timestamp(strptime(state_attr('weather.accuweather','forecast')[2]['datetime'], '%Y-%m-%dT%H:%M:%S%z', default='2020-01-00T00:00:00+00:00')) %}
            {%- set day = now | timestamp_custom("%w") %}
            {%- set days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] %}
            {{ days[ day | int -1 ] }}{{- now | timestamp_custom(" %d") }}
            {%- endif %}

      - obj: "p3b72" # Forecast temp min +2d
        properties:
          "text": "{{ state_attr('weather.accuweather','forecast')[2]['templow'] if not is_state('weather.accuweather','unavailable') else '-' }}"

      - obj: "p3b73" # Forecast temp max +2d
        properties:
          "text": "{{ state_attr('weather.accuweather','forecast')[2]['temperature'] if not is_state('weather.accuweather','unavailable') else '-' }}"

      - obj: "p3b74" # Forecast condition +2d
        properties:
          "src": >
            {%- if not is_state('weather.accuweather','unavailable') %}
            L:/w-32-{{ state_attr('weather.accuweather','forecast')[2]['condition'] }}.png
            {%- endif %}

      - obj: "p3b81" # Forecast date +3d
        properties:
          "text": >
            {%- if not is_state('weather.accuweather','unavailable') %}
            {%- set now = as_timestamp(strptime(state_attr('weather.accuweather','forecast')[2]['datetime'], '%Y-%m-%dT%H:%M:%S%z', default='2020-01-00T00:00:00+00:00')) %}
            {%- set day = now | timestamp_custom("%w") %}
            {%- set days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] %}
            {{ days[ day | int -1 ] }}{{- now | timestamp_custom(" %d") }}
            {%- endif %}

      - obj: "p3b82" # Forecast temp min +3d
        properties:
          "text": "{{ state_attr('weather.accuweather','forecast')[2]['templow'] if not is_state('weather.accuweather','unavailable') else '-' }}"

      - obj: "p3b83" # Forecast temp max +3d
        properties:
          "text": "{{ state_attr('weather.accuweather','forecast')[2]['temperature'] if not is_state('weather.accuweather','unavailable') else '-' }}"

      - obj: "p3b84" # Forecast condition +3d
        properties:
          "src": >
            {%- if not is_state('weather.accuweather','unavailable') %}
            L:/w-32-{{ state_attr('weather.accuweather','forecast')[2]['condition'] }}.png
            {%- endif %}

      - obj: "p3b91" # Forecast date +4d
        properties:
          "text": >
            {%- if not is_state('weather.accuweather','unavailable') %}
            {%- set now = as_timestamp(strptime(state_attr('weather.accuweather','forecast')[3]['datetime'], '%Y-%m-%dT%H:%M:%S%z', default='2020-01-00T00:00:00+00:00')) %}
            {%- set day = now | timestamp_custom("%w") %}
            {%- set days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] %}
            {{ days[ day | int -1 ] }}{{- now | timestamp_custom(" %d") }}
            {%- endif %}

      - obj: "p3b92" # Forecast temp min +4d
        properties:
          "text": "{{ state_attr('weather.accuweather','forecast')[3]['templow'] if not is_state('weather.accuweather','unavailable') else '-' }}"

      - obj: "p3b93" # Forecast temp max +4d
        properties:
          "text": "{{ state_attr('weather.accuweather','forecast')[3]['temperature'] if not is_state('weather.accuweather','unavailable') else '-' }}"

      - obj: "p3b94" # Forecast condition +4d
        properties:
          "src": >
            {%- if not is_state('weather.accuweather','unavailable') %}
            L:/w-32-{{ state_attr('weather.barb_s_place_hourly','forecast')[3]['condition'] }}.png
            {%- endif %}


      - obj: "p3b116" # out door %
        properties:
          "text": '{{ states("sensor.humidityoutdoor") | round(0) }}%'     
       
      - obj: "p3b119" # out door %
        properties:
          "text": '{{ states("sensor.solarradiation") | round(0) }}W/m^2'
          
      - obj: "p3b203" # rain
        properties:
          "text": '{{ states("sensor.raindaily") }} Inch'

      - obj: "p3b206" # rain hourly 
        properties:
          "text": '{{ states("sensor.rainhourly") }} PrHr'  
        
# color picker page 6 ########################

      - obj: "p6b16" # color picker for counter
        properties:
          "color": >
             {% if is_state('light.counter','on') %}
             {% set rgb = state_attr('light.counter','rgb_color') %}
             {{ "#%02x%02x%02x" | format(rgb[0],rgb[1],rgb[2]) }}            
             {% endif %}
        event:
          "up":
            - service: light.turn_on
              data:
                entity_id: "light.counter"
                rgb_color: "[{{ r }},{{ g }},{{ b }}]"

      - obj: "p6b14" # light-switch toggle button for counter
        properties:
          "val": '{{ 1 if states("light.counter") == "on" else 0 }}'
          "text": '{{ "\uE6E8" if is_state("light.counter", "on") else "\uE335" | e }}'
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "light.counter"
              
              
      - obj: "p6b18" # Light brightness for counter
        properties:
           "val": "{{ state_attr('light.counter', 'brightness') if state_attr('light.counter', 'brightness') != None else 0 }}"
        event:
          "changed":
            - service: light.turn_on
              data:
                entity_id: "light.counter"
                brightness: "{{ val }}"
          "up":
            - service: light.turn_on
              data:
                entity_id: "light.counter"
                brightness: "{{ val }}"        

      # - obj: "p6b21" # counter white to no white chanel
      #   properties:
      #     "val": '{{ 1 if is_state("light.counter", "on") else 0 }}'
      #     "text_color": '{{ "yellow" if is_state("light.counter", "on") else "white" }}'
      #     "bg_grad_color": >
      #       {% if is_state('light.counter','on') %}
      #       {% set rgb = state_attr('light.counter','rgb_color') %}
      #       {{ "#%02x%02x%02x" | format(rgb[0],rgb[1],rgb[2]) }}            
      #       {% endif %}
      #   event:
      #       "down":
      #       - service: light.turn_on
      #         data:
      #           entity_id: light.counter
      #           brightness: 255
      #           effect: solid
      #           rgbw_color:
      #             - 255
      #             - 255
      #             - 255
      #             - 0
      

        
       
       
          
